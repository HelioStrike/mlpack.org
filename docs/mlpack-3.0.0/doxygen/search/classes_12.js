var searchData=
[
  ['sa',['SA',['../classmlpack_1_1optimization_1_1SA.html',1,'mlpack::optimization']]],
  ['sampleatleavesvisitor',['SampleAtLeavesVisitor',['../classmlpack_1_1neighbor_1_1SampleAtLeavesVisitor.html',1,'mlpack::neighbor']]],
  ['sampleinitialization',['SampleInitialization',['../classmlpack_1_1kmeans_1_1SampleInitialization.html',1,'mlpack::kmeans']]],
  ['sarahplusupdate',['SARAHPlusUpdate',['../classmlpack_1_1optimization_1_1SARAHPlusUpdate.html',1,'mlpack::optimization']]],
  ['sarahtype',['SARAHType',['../classmlpack_1_1optimization_1_1SARAHType.html',1,'mlpack::optimization']]],
  ['sarahupdate',['SARAHUpdate',['../classmlpack_1_1optimization_1_1SARAHUpdate.html',1,'mlpack::optimization']]],
  ['saveoutputparametervisitor',['SaveOutputParameterVisitor',['../classmlpack_1_1ann_1_1SaveOutputParameterVisitor.html',1,'mlpack::ann']]],
  ['scd',['SCD',['../classmlpack_1_1optimization_1_1SCD.html',1,'mlpack::optimization']]],
  ['schwefelfunction',['SchwefelFunction',['../classmlpack_1_1optimization_1_1test_1_1SchwefelFunction.html',1,'mlpack::optimization::test']]],
  ['sdp',['SDP',['../classmlpack_1_1optimization_1_1SDP.html',1,'mlpack::optimization']]],
  ['sdp_3c_20arma_3a_3asp_5fmat_20_3e',['SDP&lt; arma::sp_mat &gt;',['../classmlpack_1_1optimization_1_1SDP.html',1,'mlpack::optimization']]],
  ['searchmodevisitor',['SearchModeVisitor',['../classmlpack_1_1neighbor_1_1SearchModeVisitor.html',1,'mlpack::neighbor']]],
  ['select',['Select',['../classmlpack_1_1ann_1_1Select.html',1,'mlpack::ann']]],
  ['selectmethodform',['SelectMethodForm',['../structmlpack_1_1cv_1_1SelectMethodForm.html',1,'mlpack::cv']]],
  ['selectmethodform_3c_20mlalgorithm_20_3e',['SelectMethodForm&lt; MLAlgorithm &gt;',['../structmlpack_1_1cv_1_1SelectMethodForm_3_01MLAlgorithm_01_4.html',1,'mlpack::cv']]],
  ['selectmethodform_3c_20mlalgorithm_2c_20hasmethodform_2c_20hmfs_2e_2e_2e_20_3e',['SelectMethodForm&lt; MLAlgorithm, HasMethodForm, HMFs... &gt;',['../structmlpack_1_1cv_1_1SelectMethodForm_3_01MLAlgorithm_00_01HasMethodForm_00_01HMFs_8_8_8_01_4.html',1,'mlpack::cv']]],
  ['sequential',['Sequential',['../classmlpack_1_1ann_1_1Sequential.html',1,'mlpack::ann']]],
  ['setinputheightvisitor',['SetInputHeightVisitor',['../classmlpack_1_1ann_1_1SetInputHeightVisitor.html',1,'mlpack::ann']]],
  ['setinputwidthvisitor',['SetInputWidthVisitor',['../classmlpack_1_1ann_1_1SetInputWidthVisitor.html',1,'mlpack::ann']]],
  ['sgd',['SGD',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20mlpack_3a_3aoptimization_3a_3aadadeltaupdate_20_3e',['SGD&lt; mlpack::optimization::AdaDeltaUpdate &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20mlpack_3a_3aoptimization_3a_3aadagradupdate_20_3e',['SGD&lt; mlpack::optimization::AdaGradUpdate &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20mlpack_3a_3aoptimization_3a_3armspropupdate_20_3e',['SGD&lt; mlpack::optimization::RMSPropUpdate &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20mlpack_3a_3aoptimization_3a_3asmorms3update_20_3e',['SGD&lt; mlpack::optimization::SMORMS3Update &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20updatepolicytype_2c_20cyclicaldecay_20_3e',['SGD&lt; UpdatePolicyType, CyclicalDecay &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20updatepolicytype_2c_20snapshotensembles_20_3e',['SGD&lt; UpdatePolicyType, SnapshotEnsembles &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgd_3c_20updaterule_20_3e',['SGD&lt; UpdateRule &gt;',['../classmlpack_1_1optimization_1_1SGD.html',1,'mlpack::optimization']]],
  ['sgdr',['SGDR',['../classmlpack_1_1optimization_1_1SGDR.html',1,'mlpack::optimization']]],
  ['sgdtestfunction',['SGDTestFunction',['../classmlpack_1_1optimization_1_1test_1_1SGDTestFunction.html',1,'mlpack::optimization::test']]],
  ['sigcheck',['SigCheck',['../structSigCheck.html',1,'']]],
  ['sigmoidcrossentropyerror',['SigmoidCrossEntropyError',['../classmlpack_1_1ann_1_1SigmoidCrossEntropyError.html',1,'mlpack::ann']]],
  ['simplecv',['SimpleCV',['../classmlpack_1_1cv_1_1SimpleCV.html',1,'mlpack::cv']]],
  ['simpleresiduetermination',['SimpleResidueTermination',['../classmlpack_1_1amf_1_1SimpleResidueTermination.html',1,'mlpack::amf']]],
  ['simpletolerancetermination',['SimpleToleranceTermination',['../classmlpack_1_1amf_1_1SimpleToleranceTermination.html',1,'mlpack::amf']]],
  ['simpleweightupdate',['SimpleWeightUpdate',['../classmlpack_1_1perceptron_1_1SimpleWeightUpdate.html',1,'mlpack::perceptron']]],
  ['singlemodevisitor',['SingleModeVisitor',['../classmlpack_1_1neighbor_1_1SingleModeVisitor.html',1,'SingleModeVisitor'],['../classmlpack_1_1range_1_1SingleModeVisitor.html',1,'SingleModeVisitor']]],
  ['singlesamplelimitvisitor',['SingleSampleLimitVisitor',['../classmlpack_1_1neighbor_1_1SingleSampleLimitVisitor.html',1,'mlpack::neighbor']]],
  ['singletreetraverser',['SingleTreeTraverser',['../classmlpack_1_1tree_1_1BinarySpaceTree_1_1SingleTreeTraverser.html',1,'BinarySpaceTree&lt; MetricType, StatisticType, MatType, BoundType, SplitType &gt;::SingleTreeTraverser&lt; RuleType &gt;'],['../classmlpack_1_1tree_1_1CoverTree_1_1SingleTreeTraverser.html',1,'CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::SingleTreeTraverser&lt; RuleType &gt;'],['../classmlpack_1_1tree_1_1Octree_1_1SingleTreeTraverser.html',1,'Octree&lt; MetricType, StatisticType, MatType &gt;::SingleTreeTraverser&lt; RuleType &gt;'],['../classmlpack_1_1tree_1_1RectangleTree_1_1SingleTreeTraverser.html',1,'RectangleTree&lt; MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType &gt;::SingleTreeTraverser&lt; RuleType &gt;']]],
  ['smorms3',['SMORMS3',['../classmlpack_1_1optimization_1_1SMORMS3.html',1,'mlpack::optimization']]],
  ['smorms3update',['SMORMS3Update',['../classmlpack_1_1optimization_1_1SMORMS3Update.html',1,'mlpack::optimization']]],
  ['snapshotensembles',['SnapshotEnsembles',['../classmlpack_1_1optimization_1_1SnapshotEnsembles.html',1,'mlpack::optimization']]],
  ['snapshotsgdr',['SnapshotSGDR',['../classmlpack_1_1optimization_1_1SnapshotSGDR.html',1,'mlpack::optimization']]],
  ['softmaxerrorfunction',['SoftmaxErrorFunction',['../classmlpack_1_1nca_1_1SoftmaxErrorFunction.html',1,'mlpack::nca']]],
  ['softmaxregression',['SoftmaxRegression',['../classmlpack_1_1regression_1_1SoftmaxRegression.html',1,'mlpack::regression']]],
  ['softmaxregressionfunction',['SoftmaxRegressionFunction',['../classmlpack_1_1regression_1_1SoftmaxRegressionFunction.html',1,'mlpack::regression']]],
  ['softplusfunction',['SoftplusFunction',['../classmlpack_1_1ann_1_1SoftplusFunction.html',1,'mlpack::ann']]],
  ['softsignfunction',['SoftsignFunction',['../classmlpack_1_1ann_1_1SoftsignFunction.html',1,'mlpack::ann']]],
  ['sorttask',['SortTask',['../classmlpack_1_1ann_1_1augmented_1_1tasks_1_1SortTask.html',1,'mlpack::ann::augmented::tasks']]],
  ['spacesplit',['SpaceSplit',['../classmlpack_1_1tree_1_1SpaceSplit.html',1,'mlpack::tree']]],
  ['spalerasgd',['SPALeRASGD',['../classmlpack_1_1optimization_1_1SPALeRASGD.html',1,'mlpack::optimization']]],
  ['spalerastepsize',['SPALeRAStepsize',['../classmlpack_1_1optimization_1_1SPALeRAStepsize.html',1,'mlpack::optimization']]],
  ['sparseautoencoder',['SparseAutoencoder',['../classmlpack_1_1nn_1_1SparseAutoencoder.html',1,'mlpack::nn']]],
  ['sparseautoencoderfunction',['SparseAutoencoderFunction',['../classmlpack_1_1nn_1_1SparseAutoencoderFunction.html',1,'mlpack::nn']]],
  ['sparsecoding',['SparseCoding',['../classmlpack_1_1sparse__coding_1_1SparseCoding.html',1,'mlpack::sparse_coding']]],
  ['sparsesvmfunction',['SparseSVMFunction',['../classSparseSVMFunction.html',1,'']]],
  ['sparsetestfunction',['SparseTestFunction',['../classmlpack_1_1optimization_1_1test_1_1SparseTestFunction.html',1,'mlpack::optimization::test']]],
  ['spherefunction',['SphereFunction',['../classmlpack_1_1optimization_1_1test_1_1SphereFunction.html',1,'mlpack::optimization::test']]],
  ['sphericalkernel',['SphericalKernel',['../classmlpack_1_1kernel_1_1SphericalKernel.html',1,'mlpack::kernel']]],
  ['spilldualtreetraverser',['SpillDualTreeTraverser',['../classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser.html',1,'mlpack::tree::SpillTree']]],
  ['spillsingletreetraverser',['SpillSingleTreeTraverser',['../classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser.html',1,'mlpack::tree::SpillTree']]],
  ['spilltree',['SpillTree',['../classmlpack_1_1tree_1_1SpillTree.html',1,'mlpack::tree']]],
  ['splithistorystruct',['SplitHistoryStruct',['../structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct.html',1,'mlpack::tree::XTreeAuxiliaryInformation']]],
  ['splitinfo',['SplitInfo',['../structmlpack_1_1tree_1_1MeanSplit_1_1SplitInfo.html',1,'MeanSplit&lt; BoundType, MatType &gt;::SplitInfo'],['../structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo.html',1,'MidpointSplit&lt; BoundType, MatType &gt;::SplitInfo'],['../structmlpack_1_1tree_1_1Octree_1_1SplitType_1_1SplitInfo.html',1,'Octree&lt; MetricType, StatisticType, MatType &gt;::SplitType::SplitInfo'],['../structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo.html',1,'RPTreeMaxSplit&lt; BoundType, MatType &gt;::SplitInfo'],['../structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo.html',1,'RPTreeMeanSplit&lt; BoundType, MatType &gt;::SplitInfo'],['../structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo.html',1,'VantagePointSplit&lt; BoundType, MatType, MaxNumSamples &gt;::SplitInfo']]],
  ['state',['State',['../classmlpack_1_1rl_1_1CartPole_1_1State.html',1,'CartPole::State'],['../classmlpack_1_1rl_1_1MountainCar_1_1State.html',1,'MountainCar::State']]],
  ['styblinskitangfunction',['StyblinskiTangFunction',['../classmlpack_1_1optimization_1_1test_1_1StyblinskiTangFunction.html',1,'mlpack::optimization::test']]],
  ['svdbatchlearning',['SVDBatchLearning',['../classmlpack_1_1amf_1_1SVDBatchLearning.html',1,'mlpack::amf']]],
  ['svdcompleteincrementallearning',['SVDCompleteIncrementalLearning',['../classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning.html',1,'mlpack::amf']]],
  ['svdcompleteincrementallearning_3c_20arma_3a_3asp_5fmat_20_3e',['SVDCompleteIncrementalLearning&lt; arma::sp_mat &gt;',['../classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_3_01arma_1_1sp__mat_01_4.html',1,'mlpack::amf']]],
  ['svdconvolution',['SVDConvolution',['../classmlpack_1_1ann_1_1SVDConvolution.html',1,'mlpack::ann']]],
  ['svdincompleteincrementallearning',['SVDIncompleteIncrementalLearning',['../classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning.html',1,'mlpack::amf']]],
  ['svdwrapper',['SVDWrapper',['../classmlpack_1_1cf_1_1SVDWrapper.html',1,'mlpack::cf']]],
  ['svrgtype',['SVRGType',['../classmlpack_1_1optimization_1_1SVRGType.html',1,'mlpack::optimization']]],
  ['svrgupdate',['SVRGUpdate',['../classmlpack_1_1optimization_1_1SVRGUpdate.html',1,'mlpack::optimization']]],
  ['sweepcost',['SweepCost',['../structmlpack_1_1tree_1_1MinimalCoverageSweep_1_1SweepCost.html',1,'MinimalCoverageSweep&lt; SplitPolicy &gt;::SweepCost&lt; TreeType &gt;'],['../structmlpack_1_1tree_1_1MinimalSplitsNumberSweep_1_1SweepCost.html',1,'MinimalSplitsNumberSweep&lt; SplitPolicy &gt;::SweepCost&lt; typename &gt;']]],
  ['swishfunction',['SwishFunction',['../classmlpack_1_1ann_1_1SwishFunction.html',1,'mlpack::ann']]]
];
